---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: citanodes.citacloud.rivtower.com
spec:
  group: citacloud.rivtower.com
  names:
    kind: CitaNode
    listKind: CitaNodeList
    plural: citanodes
    shortNames:
    - cn
    singular: citanode
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: CitaNode is the Schema for the citanodes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CitaNodeSpec defines the desired state of CitaNode
            properties:
              chainName:
                description: chain name
                type: string
              configMapRef:
                description: config.toml && kms.db configmap ref
                type: string
              consensusType:
                description: ConsensusType
                enum:
                - BFT
                - Raft
                type: string
              desiredState:
                description: desire status
                enum:
                - Running
                - Stopped
                type: string
              enableTls:
                description: EnableTLS
                type: boolean
              imageInfo:
                description: ImageInfo
                properties:
                  consensusImage:
                    description: ConsensusImage the image of consensus container
                    type: string
                  controllerImage:
                    description: ControllerImage the image of controller container
                    type: string
                  executorImage:
                    description: ExecutorImage the image of executor container
                    type: string
                  kmsImage:
                    description: KmsImage the image of kms container
                    type: string
                  networkImage:
                    description: NetworkImage the image of network container
                    type: string
                  pullPolicy:
                    description: PullPolicy
                    type: string
                  storageImage:
                    description: StorageImage the image of storage container
                    type: string
                type: object
              logLevel:
                default: info
                description: log level
                type: string
              storageClassName:
                description: storage class name
                type: string
              storageSize:
                description: storage size
                format: int64
                type: integer
            required:
            - chainName
            - configMapRef
            - consensusType
            - desiredState
            - storageClassName
            - storageSize
            type: object
          status:
            description: CitaNodeStatus defines the observed state of CitaNode
            properties:
              conditions:
                description: Conditions is a set of Condition instances.
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
